// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="interconnects,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.427000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=92,HLS_SYN_DSP=0,HLS_SYN_FF=2080,HLS_SYN_LUT=5255}" *)

module interconnects (
poke_V_tag_dout,
poke_V_tag_empty_n,
poke_V_tag_read,
poke_V_data_dout,
poke_V_data_empty_n,
poke_V_data_read,
peek_req_V_dout,
peek_req_V_empty_n,
peek_req_V_read,
peek_resp_V_din,
peek_resp_V_full_n,
peek_resp_V_write,
pcie_read_req_V_num_din,
pcie_read_req_V_num_full_n,
pcie_read_req_V_num_write,
pcie_read_req_V_addr_din,
pcie_read_req_V_addr_full_n,
pcie_read_req_V_addr_write,
pcie_read_resp_V_last_dout,
pcie_read_resp_V_last_empty_n,
pcie_read_resp_V_last_read,
pcie_read_resp_V_data_V_dout,
pcie_read_resp_V_data_V_empty_n,
pcie_read_resp_V_data_V_read,
pcie_write_req_data_V_last_din,
pcie_write_req_data_V_last_full_n,
pcie_write_req_data_V_last_write,
pcie_write_req_data_V_data_V_din,
pcie_write_req_data_V_data_V_full_n,
pcie_write_req_data_V_data_V_write,
pcie_write_req_apply_V_num_din,
pcie_write_req_apply_V_num_full_n,
pcie_write_req_apply_V_num_write,
pcie_write_req_apply_V_addr_din,
pcie_write_req_apply_V_addr_full_n,
pcie_write_req_apply_V_addr_write,
ap_clk,
ap_rst,
ap_done,
ap_start,
ap_ready,
ap_idle
,
dramC_read_req_V_addr_din
,dramC_read_req_V_addr_full_n
,dramC_read_req_V_addr_write
,dramC_read_req_V_num_din
,dramC_read_req_V_num_full_n
,dramC_read_req_V_num_write
,dramC_read_resp_V_data_V_dout
,dramC_read_resp_V_data_V_empty_n
,dramC_read_resp_V_data_V_read
,dramC_read_resp_V_last_dout
,dramC_read_resp_V_last_empty_n
,dramC_read_resp_V_last_read
,dramC_write_req_apply_V_addr_din
,dramC_write_req_apply_V_addr_full_n
,dramC_write_req_apply_V_addr_write
,dramC_write_req_apply_V_num_din
,dramC_write_req_apply_V_num_full_n
,dramC_write_req_apply_V_num_write
,dramC_write_req_data_V_data_V_din
,dramC_write_req_data_V_data_V_full_n
,dramC_write_req_data_V_data_V_write
,dramC_write_req_data_V_last_din
,dramC_write_req_data_V_last_full_n
,dramC_write_req_data_V_last_write
);
output  [63:0] dramC_read_req_V_addr_din;
input   dramC_read_req_V_addr_full_n;
output   dramC_read_req_V_addr_write;
output  [7:0] dramC_read_req_V_num_din;
input   dramC_read_req_V_num_full_n;
output   dramC_read_req_V_num_write;
input  [511:0] dramC_read_resp_V_data_V_dout;
input   dramC_read_resp_V_data_V_empty_n;
output   dramC_read_resp_V_data_V_read;
input   dramC_read_resp_V_last_dout;
input   dramC_read_resp_V_last_empty_n;
output   dramC_read_resp_V_last_read;
output  [63:0] dramC_write_req_apply_V_addr_din;
input   dramC_write_req_apply_V_addr_full_n;
output   dramC_write_req_apply_V_addr_write;
output  [7:0] dramC_write_req_apply_V_num_din;
input   dramC_write_req_apply_V_num_full_n;
output   dramC_write_req_apply_V_num_write;
output  [511:0] dramC_write_req_data_V_data_V_din;
input   dramC_write_req_data_V_data_V_full_n;
output   dramC_write_req_data_V_data_V_write;
output   dramC_write_req_data_V_last_din;
input   dramC_write_req_data_V_last_full_n;
output   dramC_write_req_data_V_last_write;


input  [31:0] poke_V_tag_dout;
input   poke_V_tag_empty_n;
output   poke_V_tag_read;
input  [31:0] poke_V_data_dout;
input   poke_V_data_empty_n;
output   poke_V_data_read;
input  [31:0] peek_req_V_dout;
input   peek_req_V_empty_n;
output   peek_req_V_read;
output  [31:0] peek_resp_V_din;
input   peek_resp_V_full_n;
output   peek_resp_V_write;
output  [7:0] pcie_read_req_V_num_din;
input   pcie_read_req_V_num_full_n;
output   pcie_read_req_V_num_write;
output  [63:0] pcie_read_req_V_addr_din;
input   pcie_read_req_V_addr_full_n;
output   pcie_read_req_V_addr_write;
input   pcie_read_resp_V_last_dout;
input   pcie_read_resp_V_last_empty_n;
output   pcie_read_resp_V_last_read;
input  [511:0] pcie_read_resp_V_data_V_dout;
input   pcie_read_resp_V_data_V_empty_n;
output   pcie_read_resp_V_data_V_read;
output   pcie_write_req_data_V_last_din;
input   pcie_write_req_data_V_last_full_n;
output   pcie_write_req_data_V_last_write;
output  [511:0] pcie_write_req_data_V_data_V_din;
input   pcie_write_req_data_V_data_V_full_n;
output   pcie_write_req_data_V_data_V_write;
output  [7:0] pcie_write_req_apply_V_num_din;
input   pcie_write_req_apply_V_num_full_n;
output   pcie_write_req_apply_V_num_write;
output  [63:0] pcie_write_req_apply_V_addr_din;
input   pcie_write_req_apply_V_addr_full_n;
output   pcie_write_req_apply_V_addr_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

wire    pcie_read_anti_stutt_U0_ap_start;
wire    pcie_read_anti_stutt_U0_start_full_n;
wire    pcie_read_anti_stutt_U0_ap_ready;
wire    pcie_read_anti_stutt_U0_ap_done;
wire    pcie_read_anti_stutt_U0_ap_continue;
wire    pcie_read_anti_stutt_U0_ap_idle;
wire    pcie_read_anti_stutt_U0_start_out;
wire    pcie_read_anti_stutt_U0_start_write;
wire   [7:0] pcie_read_anti_stutt_U0_pcie_read_req_V_num_din;
wire    pcie_read_anti_stutt_U0_pcie_read_req_V_num_write;
wire   [63:0] pcie_read_anti_stutt_U0_pcie_read_req_V_addr_din;
wire    pcie_read_anti_stutt_U0_pcie_read_req_V_addr_write;
wire    pcie_read_anti_stutt_U0_pcie_read_resp_V_last_read;
wire    pcie_read_anti_stutt_U0_pcie_read_resp_V_data_V_read;
wire    pcie_read_anti_stutt_U0_comm_read_req_V_num_read;
wire    pcie_read_anti_stutt_U0_comm_read_req_V_addr_read;
wire    pcie_read_anti_stutt_U0_comm_read_resp_V_last_din;
wire    pcie_read_anti_stutt_U0_comm_read_resp_V_last_write;
wire   [511:0] pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_din;
wire    pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_write;
wire    ap_sync_continue;
reg    user_kernel_U0_ap_start;
wire    user_kernel_U0_ap_done;
wire    user_kernel_U0_ap_continue;
wire    user_kernel_U0_ap_idle;
wire    user_kernel_U0_ap_ready;
wire    user_kernel_U0_user_input_data_V_V_read;
wire   [511:0] user_kernel_U0_user_output_data_V_V_din;
wire    user_kernel_U0_user_output_data_V_V_write;
wire    comm_coordinator_U0_ap_start;
wire    comm_coordinator_U0_start_full_n;
wire    comm_coordinator_U0_ap_ready;
wire    comm_coordinator_U0_ap_done;
wire    comm_coordinator_U0_ap_continue;
wire    comm_coordinator_U0_ap_idle;
wire    comm_coordinator_U0_start_out;
wire    comm_coordinator_U0_start_write;
wire    comm_coordinator_U0_poke_V_tag_read;
wire    comm_coordinator_U0_poke_V_data_read;
wire    comm_coordinator_U0_peek_req_V_read;
wire   [31:0] comm_coordinator_U0_peek_resp_V_din;
wire    comm_coordinator_U0_peek_resp_V_write;
wire   [63:0] comm_coordinator_U0_comm_next_free_outpu_din;
wire    comm_coordinator_U0_comm_next_free_outpu_write;
wire   [63:0] comm_coordinator_U0_comm_next_data_input_din;
wire    comm_coordinator_U0_comm_next_data_input_write;
wire    comm_coordinator_U0_comm_next_data_input_6_dout;
wire    comm_coordinator_U0_comm_next_data_input_6_read;
wire    comm_coordinator_U0_comm_next_free_outpu_6_dout;
wire    comm_coordinator_U0_comm_next_free_outpu_6_read;
wire    comm_coordinator_U0_free_input_req_V_dout;
wire    comm_coordinator_U0_free_input_req_V_read;
wire    comm_coordinator_U0_data_output_req_V_dout;
wire    comm_coordinator_U0_data_output_req_V_read;
wire    comm_reader_U0_ap_start;
wire    comm_reader_U0_ap_done;
wire    comm_reader_U0_ap_continue;
wire    comm_reader_U0_ap_idle;
wire    comm_reader_U0_ap_ready;
wire   [7:0] comm_reader_U0_comm_read_req_V_num_din;
wire    comm_reader_U0_comm_read_req_V_num_write;
wire   [63:0] comm_reader_U0_comm_read_req_V_addr_din;
wire    comm_reader_U0_comm_read_req_V_addr_write;
wire    comm_reader_U0_comm_read_resp_V_las_dout;
wire    comm_reader_U0_comm_read_resp_V_las_read;
wire    comm_reader_U0_comm_read_resp_V_dat_read;
wire    comm_reader_U0_comm_next_data_input_read;
wire    comm_reader_U0_comm_next_data_input_3_din;
wire    comm_reader_U0_comm_next_data_input_3_write;
wire   [511:0] comm_reader_U0_user_input_data_V_V_din;
wire    comm_reader_U0_user_input_data_V_V_write;
wire    comm_reader_U0_free_input_req_V_din;
wire    comm_reader_U0_free_input_req_V_write;
wire    comm_writer_U0_ap_start;
wire    comm_writer_U0_ap_done;
wire    comm_writer_U0_ap_continue;
wire    comm_writer_U0_ap_idle;
wire    comm_writer_U0_ap_ready;
wire    comm_writer_U0_pcie_write_req_data_s_din;
wire    comm_writer_U0_pcie_write_req_data_s_write;
wire   [511:0] comm_writer_U0_pcie_write_req_data_2_din;
wire    comm_writer_U0_pcie_write_req_data_2_write;
wire   [7:0] comm_writer_U0_pcie_write_req_apply_din;
wire    comm_writer_U0_pcie_write_req_apply_write;
wire   [63:0] comm_writer_U0_pcie_write_req_apply_2_din;
wire    comm_writer_U0_pcie_write_req_apply_2_write;
wire    comm_writer_U0_comm_next_free_outpu_read;
wire    comm_writer_U0_comm_next_free_outpu_3_din;
wire    comm_writer_U0_comm_next_free_outpu_3_write;
wire    comm_writer_U0_user_output_data_V_V_read;
wire    comm_writer_U0_data_output_req_V_din;
wire    comm_writer_U0_data_output_req_V_write;
wire    comm_read_req_V_num_full_n;
wire   [7:0] comm_read_req_V_num_dout;
wire    comm_read_req_V_num_empty_n;
wire    comm_read_req_V_addr_full_n;
wire   [63:0] comm_read_req_V_addr_dout;
wire    comm_read_req_V_addr_empty_n;
wire   [0:0] comm_read_resp_V_las_din;
wire    comm_read_resp_V_las_full_n;
wire   [0:0] comm_read_resp_V_las_dout;
wire    comm_read_resp_V_las_empty_n;
wire    comm_read_resp_V_dat_full_n;
wire   [511:0] comm_read_resp_V_dat_dout;
wire    comm_read_resp_V_dat_empty_n;
wire    user_input_data_V_V_full_n;
wire   [511:0] user_input_data_V_V_dout;
wire    user_input_data_V_V_empty_n;
wire    user_output_data_V_V_full_n;
wire   [511:0] user_output_data_V_V_dout;
wire    user_output_data_V_V_empty_n;
wire    comm_next_free_outpu_full_n;
wire   [63:0] comm_next_free_outpu_dout;
wire    comm_next_free_outpu_empty_n;
wire    comm_next_data_input_full_n;
wire   [63:0] comm_next_data_input_dout;
wire    comm_next_data_input_empty_n;
wire   [0:0] comm_next_data_input_1_din;
wire    comm_next_data_input_1_full_n;
wire   [0:0] comm_next_data_input_1_dout;
wire    comm_next_data_input_1_empty_n;
wire   [0:0] comm_next_free_outpu_1_din;
wire    comm_next_free_outpu_1_full_n;
wire   [0:0] comm_next_free_outpu_1_dout;
wire    comm_next_free_outpu_1_empty_n;
wire   [0:0] free_input_req_V_din;
wire    free_input_req_V_full_n;
wire   [0:0] free_input_req_V_dout;
wire    free_input_req_V_empty_n;
wire   [0:0] data_output_req_V_din;
wire    data_output_req_V_full_n;
wire   [0:0] data_output_req_V_dout;
wire    data_output_req_V_empty_n;
wire    ap_sync_done;
reg    ap_reg_comm_coordinator_U0_ap_done;
reg    ap_reg_pcie_read_anti_stutt_U0_ap_done;
reg    ap_reg_comm_writer_U0_ap_done;
wire    ap_sync_ready;
reg    ap_sync_reg_comm_coordinator_U0_ap_ready;
wire    ap_sync_comm_coordinator_U0_ap_ready;
reg   [1:0] comm_coordinator_U0_ap_ready_count;
reg    ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready;
wire    ap_sync_pcie_read_anti_stutt_U0_ap_ready;
reg   [1:0] pcie_read_anti_stutt_U0_ap_ready_count;
wire   [0:0] start_for_comm_reader_U0_din;
wire    start_for_comm_reader_U0_full_n;
wire   [0:0] start_for_comm_reader_U0_dout;
wire    start_for_comm_reader_U0_empty_n;
wire    user_kernel_U0_start_full_n;
wire    user_kernel_U0_start_write;
wire   [0:0] start_for_comm_writer_U0_din;
wire    start_for_comm_writer_U0_full_n;
wire   [0:0] start_for_comm_writer_U0_dout;
wire    start_for_comm_writer_U0_empty_n;
wire    comm_reader_U0_start_full_n;
wire    comm_reader_U0_start_write;
wire    comm_writer_U0_start_full_n;
wire    comm_writer_U0_start_write;

// power-on initialization
initial begin
#0 user_kernel_U0_ap_start = 1'b0;
#0 ap_reg_comm_coordinator_U0_ap_done = 1'b0;
#0 ap_reg_pcie_read_anti_stutt_U0_ap_done = 1'b0;
#0 ap_reg_comm_writer_U0_ap_done = 1'b0;
#0 ap_sync_reg_comm_coordinator_U0_ap_ready = 1'b0;
#0 comm_coordinator_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready = 1'b0;
#0 pcie_read_anti_stutt_U0_ap_ready_count = 2'd0;
end

pcie_read_anti_stutter pcie_read_anti_stutt_U0(
.ap_clk(ap_clk),
.ap_rst(ap_rst),
.ap_start(ap_start),

.ap_ready(pcie_read_anti_stutt_U0_ap_ready),
.ap_done(pcie_read_anti_stutt_U0_ap_done),
.ap_continue(pcie_read_anti_stutt_U0_ap_continue),
.ap_idle(pcie_read_anti_stutt_U0_ap_idle),


.pcie_read_req_V_num_din(pcie_read_anti_stutt_U0_pcie_read_req_V_num_din),
.pcie_read_req_V_num_full_n(pcie_read_req_V_num_full_n),
.pcie_read_req_V_num_write(pcie_read_anti_stutt_U0_pcie_read_req_V_num_write),
.pcie_read_req_V_addr_din(pcie_read_anti_stutt_U0_pcie_read_req_V_addr_din),
.pcie_read_req_V_addr_full_n(pcie_read_req_V_addr_full_n),
.pcie_read_req_V_addr_write(pcie_read_anti_stutt_U0_pcie_read_req_V_addr_write),
.pcie_read_resp_V_last_dout(pcie_read_resp_V_last_dout),
.pcie_read_resp_V_last_empty_n(pcie_read_resp_V_last_empty_n),
.pcie_read_resp_V_last_read(pcie_read_anti_stutt_U0_pcie_read_resp_V_last_read),
.pcie_read_resp_V_data_V_dout(pcie_read_resp_V_data_V_dout),
.pcie_read_resp_V_data_V_empty_n(pcie_read_resp_V_data_V_empty_n),
.pcie_read_resp_V_data_V_read(pcie_read_anti_stutt_U0_pcie_read_resp_V_data_V_read),
.comm_read_req_V_num_dout(comm_read_req_V_num_dout),
.comm_read_req_V_num_empty_n(comm_read_req_V_num_empty_n),
.comm_read_req_V_num_read(pcie_read_anti_stutt_U0_comm_read_req_V_num_read),
.comm_read_req_V_addr_dout(comm_read_req_V_addr_dout),
.comm_read_req_V_addr_empty_n(comm_read_req_V_addr_empty_n),
.comm_read_req_V_addr_read(pcie_read_anti_stutt_U0_comm_read_req_V_addr_read),
.comm_read_resp_V_last_din(pcie_read_anti_stutt_U0_comm_read_resp_V_last_din),
.comm_read_resp_V_last_full_n(comm_read_resp_V_las_full_n),
.comm_read_resp_V_last_write(pcie_read_anti_stutt_U0_comm_read_resp_V_last_write),
.comm_read_resp_V_data_V_din(pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_din),
.comm_read_resp_V_data_V_full_n(comm_read_resp_V_dat_full_n),
.comm_read_resp_V_data_V_write(pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_write)
);

user_kernel user_kernel_U0(
.ap_clk(ap_clk),
.ap_rst(ap_rst),
.ap_start(ap_start),
.ap_done(user_kernel_U0_ap_done),
.ap_continue(user_kernel_U0_ap_continue),
.ap_idle(user_kernel_U0_ap_idle),
.ap_ready(user_kernel_U0_ap_ready),
.user_input_data_V_V_dout(user_input_data_V_V_dout),
.user_input_data_V_V_empty_n(user_input_data_V_V_empty_n),
.user_input_data_V_V_read(user_kernel_U0_user_input_data_V_V_read),
.user_output_data_V_V_din(user_kernel_U0_user_output_data_V_V_din),
.user_output_data_V_V_full_n(user_output_data_V_V_full_n),
.user_output_data_V_V_write(user_kernel_U0_user_output_data_V_V_write)
);

comm_coordinator comm_coordinator_U0(
.ap_clk(ap_clk),
.ap_rst(ap_rst),
.ap_start(ap_start),

.ap_ready(comm_coordinator_U0_ap_ready),
.ap_done(comm_coordinator_U0_ap_done),
.ap_continue(comm_coordinator_U0_ap_continue),
.ap_idle(comm_coordinator_U0_ap_idle),


.poke_V_tag_dout(poke_V_tag_dout),
.poke_V_tag_empty_n(poke_V_tag_empty_n),
.poke_V_tag_read(comm_coordinator_U0_poke_V_tag_read),
.poke_V_data_dout(poke_V_data_dout),
.poke_V_data_empty_n(poke_V_data_empty_n),
.poke_V_data_read(comm_coordinator_U0_poke_V_data_read),
.peek_req_V_dout(peek_req_V_dout),
.peek_req_V_empty_n(peek_req_V_empty_n),
.peek_req_V_read(comm_coordinator_U0_peek_req_V_read),
.peek_resp_V_din(comm_coordinator_U0_peek_resp_V_din),
.peek_resp_V_full_n(peek_resp_V_full_n),
.peek_resp_V_write(comm_coordinator_U0_peek_resp_V_write),
.comm_next_free_output_buf_addr_V_din(comm_coordinator_U0_comm_next_free_outpu_din),
.comm_next_free_output_buf_addr_V_full_n(comm_next_free_outpu_full_n),
.comm_next_free_output_buf_addr_V_write(comm_coordinator_U0_comm_next_free_outpu_write),
.comm_next_data_input_buf_addr_V_din(comm_coordinator_U0_comm_next_data_input_din),
.comm_next_data_input_buf_addr_V_full_n(comm_next_data_input_full_n),
.comm_next_data_input_buf_addr_V_write(comm_coordinator_U0_comm_next_data_input_write),
.comm_next_data_input_buf_addr_req_V_dout(comm_coordinator_U0_comm_next_data_input_6_dout),
.comm_next_data_input_buf_addr_req_V_empty_n(comm_next_data_input_1_empty_n),
.comm_next_data_input_buf_addr_req_V_read(comm_coordinator_U0_comm_next_data_input_6_read),
.comm_next_free_output_buf_addr_req_V_dout(comm_coordinator_U0_comm_next_free_outpu_6_dout),
.comm_next_free_output_buf_addr_req_V_empty_n(comm_next_free_outpu_1_empty_n),
.comm_next_free_output_buf_addr_req_V_read(comm_coordinator_U0_comm_next_free_outpu_6_read),
.free_input_req_V_dout(comm_coordinator_U0_free_input_req_V_dout),
.free_input_req_V_empty_n(free_input_req_V_empty_n),
.free_input_req_V_read(comm_coordinator_U0_free_input_req_V_read),
.data_output_req_V_dout(comm_coordinator_U0_data_output_req_V_dout),
.data_output_req_V_empty_n(data_output_req_V_empty_n),
.data_output_req_V_read(comm_coordinator_U0_data_output_req_V_read)
);

comm_reader comm_reader_U0(
.ap_clk(ap_clk),
.ap_rst(ap_rst),
.ap_start(ap_start),
.ap_done(comm_reader_U0_ap_done),
.ap_continue(comm_reader_U0_ap_continue),
.ap_idle(comm_reader_U0_ap_idle),
.ap_ready(comm_reader_U0_ap_ready),
.comm_read_req_V_num_din(comm_reader_U0_comm_read_req_V_num_din),
.comm_read_req_V_num_full_n(comm_read_req_V_num_full_n),
.comm_read_req_V_num_write(comm_reader_U0_comm_read_req_V_num_write),
.comm_read_req_V_addr_din(comm_reader_U0_comm_read_req_V_addr_din),
.comm_read_req_V_addr_full_n(comm_read_req_V_addr_full_n),
.comm_read_req_V_addr_write(comm_reader_U0_comm_read_req_V_addr_write),
.comm_read_resp_V_last_dout(comm_reader_U0_comm_read_resp_V_las_dout),
.comm_read_resp_V_last_empty_n(comm_read_resp_V_las_empty_n),
.comm_read_resp_V_last_read(comm_reader_U0_comm_read_resp_V_las_read),
.comm_read_resp_V_data_V_dout(comm_read_resp_V_dat_dout),
.comm_read_resp_V_data_V_empty_n(comm_read_resp_V_dat_empty_n),
.comm_read_resp_V_data_V_read(comm_reader_U0_comm_read_resp_V_dat_read),
.comm_next_data_input_buf_addr_V_dout(comm_next_data_input_dout),
.comm_next_data_input_buf_addr_V_empty_n(comm_next_data_input_empty_n),
.comm_next_data_input_buf_addr_V_read(comm_reader_U0_comm_next_data_input_read),
.comm_next_data_input_buf_addr_req_V_din(comm_reader_U0_comm_next_data_input_3_din),
.comm_next_data_input_buf_addr_req_V_full_n(comm_next_data_input_1_full_n),
.comm_next_data_input_buf_addr_req_V_write(comm_reader_U0_comm_next_data_input_3_write),
.user_input_data_V_V_din(comm_reader_U0_user_input_data_V_V_din),
.user_input_data_V_V_full_n(user_input_data_V_V_full_n),
.user_input_data_V_V_write(comm_reader_U0_user_input_data_V_V_write),
.free_input_req_V_din(comm_reader_U0_free_input_req_V_din),
.free_input_req_V_full_n(free_input_req_V_full_n),
.free_input_req_V_write(comm_reader_U0_free_input_req_V_write)
);

comm_writer comm_writer_U0(
.ap_clk(ap_clk),
.ap_rst(ap_rst),
.ap_start(ap_start),
.ap_done(comm_writer_U0_ap_done),
.ap_continue(comm_writer_U0_ap_continue),
.ap_idle(comm_writer_U0_ap_idle),
.ap_ready(comm_writer_U0_ap_ready),
.pcie_write_req_data_V_last_din(comm_writer_U0_pcie_write_req_data_s_din),
.pcie_write_req_data_V_last_full_n(pcie_write_req_data_V_last_full_n),
.pcie_write_req_data_V_last_write(comm_writer_U0_pcie_write_req_data_s_write),
.pcie_write_req_data_V_data_V_din(comm_writer_U0_pcie_write_req_data_2_din),
.pcie_write_req_data_V_data_V_full_n(pcie_write_req_data_V_data_V_full_n),
.pcie_write_req_data_V_data_V_write(comm_writer_U0_pcie_write_req_data_2_write),
.pcie_write_req_apply_V_num_din(comm_writer_U0_pcie_write_req_apply_din),
.pcie_write_req_apply_V_num_full_n(pcie_write_req_apply_V_num_full_n),
.pcie_write_req_apply_V_num_write(comm_writer_U0_pcie_write_req_apply_write),
.pcie_write_req_apply_V_addr_din(comm_writer_U0_pcie_write_req_apply_2_din),
.pcie_write_req_apply_V_addr_full_n(pcie_write_req_apply_V_addr_full_n),
.pcie_write_req_apply_V_addr_write(comm_writer_U0_pcie_write_req_apply_2_write),
.comm_next_free_output_buf_addr_V_dout(comm_next_free_outpu_dout),
.comm_next_free_output_buf_addr_V_empty_n(comm_next_free_outpu_empty_n),
.comm_next_free_output_buf_addr_V_read(comm_writer_U0_comm_next_free_outpu_read),
.comm_next_free_output_buf_addr_req_V_din(comm_writer_U0_comm_next_free_outpu_3_din),
.comm_next_free_output_buf_addr_req_V_full_n(comm_next_free_outpu_1_full_n),
.comm_next_free_output_buf_addr_req_V_write(comm_writer_U0_comm_next_free_outpu_3_write),
.user_output_data_V_V_dout(user_output_data_V_V_dout),
.user_output_data_V_V_empty_n(user_output_data_V_V_empty_n),
.user_output_data_V_V_read(comm_writer_U0_user_output_data_V_V_read),
.data_output_req_V_din(comm_writer_U0_data_output_req_V_din),
.data_output_req_V_full_n(data_output_req_V_full_n),
.data_output_req_V_write(comm_writer_U0_data_output_req_V_write)
);

fifo_w8_d128_A comm_read_req_V_num_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_reader_U0_comm_read_req_V_num_din),
.if_full_n(comm_read_req_V_num_full_n),
.if_write(comm_reader_U0_comm_read_req_V_num_write),
.if_dout(comm_read_req_V_num_dout),
.if_empty_n(comm_read_req_V_num_empty_n),
.if_read(pcie_read_anti_stutt_U0_comm_read_req_V_num_read)
);

fifo_w64_d128_A comm_read_req_V_addr_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_reader_U0_comm_read_req_V_addr_din),
.if_full_n(comm_read_req_V_addr_full_n),
.if_write(comm_reader_U0_comm_read_req_V_addr_write),
.if_dout(comm_read_req_V_addr_dout),
.if_empty_n(comm_read_req_V_addr_empty_n),
.if_read(pcie_read_anti_stutt_U0_comm_read_req_V_addr_read)
);

fifo_w1_d128_A comm_read_resp_V_las_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_read_resp_V_las_din),
.if_full_n(comm_read_resp_V_las_full_n),
.if_write(pcie_read_anti_stutt_U0_comm_read_resp_V_last_write),
.if_dout(comm_read_resp_V_las_dout),
.if_empty_n(comm_read_resp_V_las_empty_n),
.if_read(comm_reader_U0_comm_read_resp_V_las_read)
);

fifo_w512_d128_A comm_read_resp_V_dat_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_din),
.if_full_n(comm_read_resp_V_dat_full_n),
.if_write(pcie_read_anti_stutt_U0_comm_read_resp_V_data_V_write),
.if_dout(comm_read_resp_V_dat_dout),
.if_empty_n(comm_read_resp_V_dat_empty_n),
.if_read(comm_reader_U0_comm_read_resp_V_dat_read)
);

fifo_w512_d256_A user_input_data_V_V_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_reader_U0_user_input_data_V_V_din),
.if_full_n(user_input_data_V_V_full_n),
.if_write(comm_reader_U0_user_input_data_V_V_write),
.if_dout(user_input_data_V_V_dout),
.if_empty_n(user_input_data_V_V_empty_n),
.if_read(user_kernel_U0_user_input_data_V_V_read)
);

fifo_w512_d128_A user_output_data_V_V_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(user_kernel_U0_user_output_data_V_V_din),
.if_full_n(user_output_data_V_V_full_n),
.if_write(user_kernel_U0_user_output_data_V_V_write),
.if_dout(user_output_data_V_V_dout),
.if_empty_n(user_output_data_V_V_empty_n),
.if_read(comm_writer_U0_user_output_data_V_V_read)
);

fifo_w64_d4_A comm_next_free_outpu_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_coordinator_U0_comm_next_free_outpu_din),
.if_full_n(comm_next_free_outpu_full_n),
.if_write(comm_coordinator_U0_comm_next_free_outpu_write),
.if_dout(comm_next_free_outpu_dout),
.if_empty_n(comm_next_free_outpu_empty_n),
.if_read(comm_writer_U0_comm_next_free_outpu_read)
);

fifo_w64_d4_A comm_next_data_input_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_coordinator_U0_comm_next_data_input_din),
.if_full_n(comm_next_data_input_full_n),
.if_write(comm_coordinator_U0_comm_next_data_input_write),
.if_dout(comm_next_data_input_dout),
.if_empty_n(comm_next_data_input_empty_n),
.if_read(comm_reader_U0_comm_next_data_input_read)
);

fifo_w1_d4_A comm_next_data_input_1_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_next_data_input_1_din),
.if_full_n(comm_next_data_input_1_full_n),
.if_write(comm_reader_U0_comm_next_data_input_3_write),
.if_dout(comm_next_data_input_1_dout),
.if_empty_n(comm_next_data_input_1_empty_n),
.if_read(comm_coordinator_U0_comm_next_data_input_6_read)
);

fifo_w1_d4_A comm_next_free_outpu_1_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(comm_next_free_outpu_1_din),
.if_full_n(comm_next_free_outpu_1_full_n),
.if_write(comm_writer_U0_comm_next_free_outpu_3_write),
.if_dout(comm_next_free_outpu_1_dout),
.if_empty_n(comm_next_free_outpu_1_empty_n),
.if_read(comm_coordinator_U0_comm_next_free_outpu_6_read)
);

fifo_w1_d128_A free_input_req_V_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(free_input_req_V_din),
.if_full_n(free_input_req_V_full_n),
.if_write(comm_reader_U0_free_input_req_V_write),
.if_dout(free_input_req_V_dout),
.if_empty_n(free_input_req_V_empty_n),
.if_read(comm_coordinator_U0_free_input_req_V_read)
);

fifo_w1_d128_A data_output_req_V_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(data_output_req_V_din),
.if_full_n(data_output_req_V_full_n),
.if_write(comm_writer_U0_data_output_req_V_write),
.if_dout(data_output_req_V_dout),
.if_empty_n(data_output_req_V_empty_n),
.if_read(comm_coordinator_U0_data_output_req_V_read)
);

start_for_comm_rehbi start_for_comm_rehbi_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(start_for_comm_reader_U0_din),
.if_full_n(start_for_comm_reader_U0_full_n),
.if_write(pcie_read_anti_stutt_U0_start_write),
.if_dout(start_for_comm_reader_U0_dout),
.if_empty_n(start_for_comm_reader_U0_empty_n),
.if_read(comm_reader_U0_ap_ready)
);

start_for_comm_wribs start_for_comm_wribs_U(
.clk(ap_clk),
.reset(ap_rst),
.if_read_ce(1'b1),
.if_write_ce(1'b1),
.if_din(start_for_comm_writer_U0_din),
.if_full_n(start_for_comm_writer_U0_full_n),
.if_write(comm_coordinator_U0_start_write),
.if_dout(start_for_comm_writer_U0_dout),
.if_empty_n(start_for_comm_writer_U0_empty_n),
.if_read(comm_writer_U0_ap_ready)
);

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
ap_reg_comm_coordinator_U0_ap_done <= 1'b0;
end else begin
if ((1'b1 == ap_sync_done)) begin
ap_reg_comm_coordinator_U0_ap_done <= 1'b0;
end else begin
ap_reg_comm_coordinator_U0_ap_done <= (comm_coordinator_U0_ap_done | ap_reg_comm_coordinator_U0_ap_done);
end
end
end

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
ap_reg_comm_writer_U0_ap_done <= 1'b0;
end else begin
if ((1'b1 == ap_sync_done)) begin
ap_reg_comm_writer_U0_ap_done <= 1'b0;
end else begin
ap_reg_comm_writer_U0_ap_done <= (comm_writer_U0_ap_done | ap_reg_comm_writer_U0_ap_done);
end
end
end

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
ap_reg_pcie_read_anti_stutt_U0_ap_done <= 1'b0;
end else begin
if ((1'b1 == ap_sync_done)) begin
ap_reg_pcie_read_anti_stutt_U0_ap_done <= 1'b0;
end else begin
ap_reg_pcie_read_anti_stutt_U0_ap_done <= (pcie_read_anti_stutt_U0_ap_done | ap_reg_pcie_read_anti_stutt_U0_ap_done);
end
end
end

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
ap_sync_reg_comm_coordinator_U0_ap_ready <= 1'b0;
end else begin
if ((1'b1 == (ap_start & ap_sync_ready))) begin
ap_sync_reg_comm_coordinator_U0_ap_ready <= 1'b0;
end else begin
ap_sync_reg_comm_coordinator_U0_ap_ready <= ap_sync_comm_coordinator_U0_ap_ready;
end
end
end

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready <= 1'b0;
end else begin
if ((1'b1 == (ap_start & ap_sync_ready))) begin
ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready <= 1'b0;
end else begin
ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready <= ap_sync_pcie_read_anti_stutt_U0_ap_ready;
end
end
end

always @ (posedge ap_clk) begin
if (ap_rst == 1'b1) begin
user_kernel_U0_ap_start <= 1'b0;
end else begin
user_kernel_U0_ap_start <= 1'b1;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == comm_coordinator_U0_ap_ready) & (1'b1 == ap_sync_ready))) begin
comm_coordinator_U0_ap_ready_count <= (comm_coordinator_U0_ap_ready_count - 2'd1);
end else if (((1'b1 == comm_coordinator_U0_ap_ready) & (1'b0 == ap_sync_ready))) begin
comm_coordinator_U0_ap_ready_count <= (comm_coordinator_U0_ap_ready_count + 2'd1);
end
end

always @ (posedge ap_clk) begin
if (((1'b1 == ap_sync_ready) & (1'b0 == pcie_read_anti_stutt_U0_ap_ready))) begin
pcie_read_anti_stutt_U0_ap_ready_count <= (pcie_read_anti_stutt_U0_ap_ready_count - 2'd1);
end else if (((1'b0 == ap_sync_ready) & (pcie_read_anti_stutt_U0_ap_ready == 1'b1))) begin
pcie_read_anti_stutt_U0_ap_ready_count <= (pcie_read_anti_stutt_U0_ap_ready_count + 2'd1);
end
end

assign ap_done = ap_sync_done;

assign ap_idle = (pcie_read_anti_stutt_U0_ap_idle & user_kernel_U0_ap_idle & comm_coordinator_U0_ap_idle & comm_reader_U0_ap_idle & comm_writer_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_comm_coordinator_U0_ap_ready = (comm_coordinator_U0_ap_ready | ap_sync_reg_comm_coordinator_U0_ap_ready);

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = (ap_reg_comm_coordinator_U0_ap_done & ap_reg_pcie_read_anti_stutt_U0_ap_done & ap_reg_comm_writer_U0_ap_done);

assign ap_sync_pcie_read_anti_stutt_U0_ap_ready = (pcie_read_anti_stutt_U0_ap_ready | ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready);

assign ap_sync_ready = (ap_sync_comm_coordinator_U0_ap_ready & ap_sync_pcie_read_anti_stutt_U0_ap_ready);

assign comm_coordinator_U0_ap_continue = ap_sync_done;

assign comm_coordinator_U0_ap_start = (ap_start & (ap_sync_reg_comm_coordinator_U0_ap_ready ^ 1'b1));

assign comm_coordinator_U0_comm_next_data_input_6_dout = comm_next_data_input_1_dout;

assign comm_coordinator_U0_comm_next_free_outpu_6_dout = comm_next_free_outpu_1_dout;

assign comm_coordinator_U0_data_output_req_V_dout = data_output_req_V_dout;

assign comm_coordinator_U0_free_input_req_V_dout = free_input_req_V_dout;

assign comm_coordinator_U0_start_full_n = (1'b0 | start_for_comm_writer_U0_full_n);

assign comm_next_data_input_1_din = comm_reader_U0_comm_next_data_input_3_din;

assign comm_next_free_outpu_1_din = comm_writer_U0_comm_next_free_outpu_3_din;

assign comm_read_resp_V_las_din = pcie_read_anti_stutt_U0_comm_read_resp_V_last_din;

assign comm_reader_U0_ap_continue = 1'b1;

assign comm_reader_U0_ap_start = start_for_comm_reader_U0_empty_n;

assign comm_reader_U0_comm_read_resp_V_las_dout = comm_read_resp_V_las_dout;

assign comm_reader_U0_start_full_n = 1'b0;

assign comm_reader_U0_start_write = 1'b0;

assign comm_writer_U0_ap_continue = ap_sync_done;

assign comm_writer_U0_ap_start = start_for_comm_writer_U0_empty_n;

assign comm_writer_U0_start_full_n = 1'b0;

assign comm_writer_U0_start_write = 1'b0;

assign data_output_req_V_din = comm_writer_U0_data_output_req_V_din;

assign free_input_req_V_din = comm_reader_U0_free_input_req_V_din;

assign pcie_read_anti_stutt_U0_ap_continue = ap_sync_done;

assign pcie_read_anti_stutt_U0_ap_start = (ap_start & (ap_sync_reg_pcie_read_anti_stutt_U0_ap_ready ^ 1'b1));

assign pcie_read_anti_stutt_U0_start_full_n = (1'b0 | start_for_comm_reader_U0_full_n);

assign pcie_read_req_V_addr_din = pcie_read_anti_stutt_U0_pcie_read_req_V_addr_din;

assign pcie_read_req_V_addr_write = pcie_read_anti_stutt_U0_pcie_read_req_V_addr_write;

assign pcie_read_req_V_num_din = pcie_read_anti_stutt_U0_pcie_read_req_V_num_din;

assign pcie_read_req_V_num_write = pcie_read_anti_stutt_U0_pcie_read_req_V_num_write;

assign pcie_read_resp_V_data_V_read = pcie_read_anti_stutt_U0_pcie_read_resp_V_data_V_read;

assign pcie_read_resp_V_last_read = pcie_read_anti_stutt_U0_pcie_read_resp_V_last_read;

assign pcie_write_req_apply_V_addr_din = comm_writer_U0_pcie_write_req_apply_2_din;

assign pcie_write_req_apply_V_addr_write = comm_writer_U0_pcie_write_req_apply_2_write;

assign pcie_write_req_apply_V_num_din = comm_writer_U0_pcie_write_req_apply_din;

assign pcie_write_req_apply_V_num_write = comm_writer_U0_pcie_write_req_apply_write;

assign pcie_write_req_data_V_data_V_din = comm_writer_U0_pcie_write_req_data_2_din;

assign pcie_write_req_data_V_data_V_write = comm_writer_U0_pcie_write_req_data_2_write;

assign pcie_write_req_data_V_last_din = comm_writer_U0_pcie_write_req_data_s_din;

assign pcie_write_req_data_V_last_write = comm_writer_U0_pcie_write_req_data_s_write;

assign peek_req_V_read = comm_coordinator_U0_peek_req_V_read;

assign peek_resp_V_din = comm_coordinator_U0_peek_resp_V_din;

assign peek_resp_V_write = comm_coordinator_U0_peek_resp_V_write;

assign poke_V_data_read = comm_coordinator_U0_poke_V_data_read;

assign poke_V_tag_read = comm_coordinator_U0_poke_V_tag_read;

assign start_for_comm_reader_U0_din = 1'b1;

assign start_for_comm_writer_U0_din = 1'b1;

assign user_kernel_U0_ap_continue = 1'b1;

assign user_kernel_U0_start_full_n = 1'b0;

assign user_kernel_U0_start_write = 1'b0;

endmodule //interconnects
